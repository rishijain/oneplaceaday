- content_for :head do
  %meta{property: 'og:title',content: "#{@post.title}"}
  %meta{property: 'og:url', content: "http://www.athappyplace.com/posts/#{@post.id}"}
  %meta{property: 'og:image', content: "#{@post.photo.url}"}
  %meta{property: 'og:description', content: "#{sanitize(truncate(@post.description, length: 300, escape: false), attributes: %w(href))}"}

= form_tag change_state_post_path(@post), remote: true, method: 'post', id: 'state_change_form' do
  = hidden_field_tag 'next_state'

.row
  .col-md-1
  .col-md-10.image-container.box-container
    - if post_is_editable?(@post.user, current_user)
      %div.state_change_btns
        = link_to 'Keep in Draft', '#', class: "btn btn-default btn-state #{state_active(@post.aasm_state, "draft")}", "data-next-state" => 'draft', 'data-toggle' => 'tooltip', title: 'The post will be saved in draft state i.e it will not be visible for others to see the post.'
        = link_to 'Send for moderation', '#', class: "btn btn-info btn-state #{state_active(@post.aasm_state, 'moderation')}", "data-next-state" => 'moderation', 'data-toggle' => 'tooltip', title: 'The post will be saved in moderation state and our experts will review your post and get back to you. And also it will not be visible for others to see the post. You can change the state of the post to draft or publish any time.'
        = link_to 'Publish Post', '#', class: "btn btn-success btn-state #{state_active(@post.aasm_state, 'published')}", "data-next-state" => 'published', 'data-toggle' => 'tooltip', title: 'The post will be saved in published state i.e it will be visible for all users to see and read this post.'
        = link_to 'Edit Post', edit_post_path(@post), class: "btn btn-success btn-warning", 'data-toggle' => 'tooltip', title: 'Open post to edit.'
      %p.title
        = link_to @post.title, edit_post_path(@post.id), title: 'Click to edit this post'
        %span.glyphicon.glyphicon-heart.untitle.like_count{class: class_for_link_unlike_based_on_count(@post)}= @post.likes_count
        %span.glyphicon.glyphicon-eye-open.untitle= @post.views_count
        = social_share_button_tag(@post.title, :popup => "true", :url => post_url(@post), :image => @post.photo_url)
    - else
      %p.title
        = @post.title
        = get_like_button(@post, current_user)
        %span.glyphicon.glyphicon-eye-open.untitle= @post.views_count
        = social_share_button_tag(@post.title, :popup => "true", :url => post_url(@post), :image => @post.photo_url)
    = image_tag @post.photo.url
    .description
      = @post.description
    %p.info Visited on: #{@post.visited_on}
    %p.info 
      Place: #{@post.place + ', ' + @post.country}
      = map_image(@post.latitude, @post.longitude)
    = link_to "<p class='info'>Author: #{@post.user.username}</p>".html_safe, user_path(@post.user)
    = image_tag get_user_profile_picture(@post.user), class: 'profile-pic img-circle'
  .col-md-1
%br

.row
  .col-md-1
  .col-md-10
    %p.txtStyle.small_title.underline Other posts you may like:

.row
  - @suggested_posts.each_with_index do |p, index|
    .col-md-4.image-container.box-container.listing.suggestions{:class => "#{offset_for_class(index)}"}
      = link_to post_path(p.id) do
        = image_tag custom_url(p), class: 'image-medium'
      %br
      = link_to post_path(p.id) do
        %p.txtStyle.small_title= p.title
      = link_to "<p class='info'>Author: #{p.user.username}</p>".html_safe, user_path(p.user)
%br
%br

.row
  .col-md-1
  .col-md-10
    %p.txtStyle.small_title Comments:

- @post.comments.includes(:user).each do |comment|
  .row
    .col-md-1
    .col-md-10.image-container.box-container
      .col-md-1
        = image_tag get_user_profile_picture(comment.user), class: 'profile-pic img-circle'
      .col-md-10.comment
        %p.comment-text.txtStyle.tiny-text= username_for_user(comment.user)
        %br
        %p.comment-text.txtStyle.small_title= comment.thought
    .col-md-1
%br

.row
  .col-md-1
  .col-md-10.image-container.box-container
    = simple_form_for(@post.comments.new, url: add_comment_post_path(@post)) do |c|
      .col-md-1
        = image_tag get_user_profile_picture(current_user), class: 'profile-pic img-circle'
      .col-md-10.comment
        %p.comment-text.txtStyle.tiny-text= username_for_user(current_user)
        %br
        = c.input :thought, as: :text, label: false
        = c.hidden_field :user_id, value: value_of_user_id(current_user)
        = link_to 'Add', '#', id: 'add_comment_link', class: 'btn'
    %br
  .col-md-1

:javascript

  $('#add_comment_link').click(function(){
    $('#new_comment').submit()
  });
